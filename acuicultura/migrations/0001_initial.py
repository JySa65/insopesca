# Generated by Django 2.1 on 2019-05-13 20:41

from django.db import migrations, models
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='BoundaryMap',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='BoundaryMapSelect',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('name', models.CharField(max_length=1000, verbose_name='Nombre')),
            ],
        ),
        migrations.CreateModel(
            name='CardinalPoint',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('north', models.FloatField(verbose_name='Norte')),
                ('west', models.FloatField(verbose_name='Este')),
                ('altitude', models.FloatField(verbose_name='Altitud')),
                ('total_area_terr', models.FloatField(verbose_name='Area total del Terreno')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='InspectionLagoon',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('oxdi', models.FloatField(verbose_name='OXIGENO DISUELTO (mg/l)')),
                ('saox', models.FloatField(verbose_name='% SATURACION DE OXIGENO')),
                ('ph', models.FloatField(verbose_name='PH')),
                ('conde', models.FloatField(verbose_name='CONDUCTIVILIDAD ELECTRICA')),
                ('soto', models.FloatField(verbose_name='SOLIDOS TOTALES')),
                ('sotodi', models.FloatField(verbose_name='SOLIDOS TOTALES DISUELTOS (mg/l)')),
                ('trans', models.FloatField(verbose_name='TRANSPARENCIA (cm)')),
                ('tempa', models.FloatField(verbose_name='TEMPERATURA DEL AGUA (ºC)')),
                ('odsa', models.FloatField(verbose_name='O.D. AL 100% DE SATURACION')),
                ('notes', models.TextField(verbose_name='Observaciones')),
                ('date', models.DateField(verbose_name='Fecha de Inspección')),
                ('next_date', models.DateField(verbose_name='Siguiente Inspección')),
            ],
        ),
        migrations.CreateModel(
            name='Lagoon',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('lagoon_diameter', models.FloatField(verbose_name='Ancho de la Laguna')),
                ('lagoon_deepth', models.FloatField(verbose_name='Largo de la Laguna ')),
                ('lagoon_height', models.FloatField(verbose_name='Altura De La Laguna')),
                ('lagoon_type', models.CharField(max_length=30, verbose_name='Tipo De Laguna')),
                ('total_area_mirror_guater', models.FloatField(blank=True, null=True, verbose_name='Area total de Terreno')),
                ('sistem_cultivate', models.CharField(blank=True, choices=[('is_mono', 'Mono Cultivo'), ('is_duo', 'Poli Cultivo')], max_length=50, null=True, verbose_name='Sistema de Cultivo')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='LagoonEspecies',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number_specie', models.FloatField()),
            ],
        ),
        migrations.CreateModel(
            name='LagoonTracing',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
    ]
